allprojects {}

subprojects {
  apply plugin: 'java'
  apply plugin: 'java-library'
  apply plugin: 'maven-publish'

  group = 'net.marci.hr'
  version = "${marciHrVersion}"

  java {
    toolchain {
      languageVersion = JavaLanguageVersion.of(21)
    }
  }

  repositories {
    mavenLocal()
    mavenCentral()
  }

  tasks.register('sourcesJar', Jar) {
    dependsOn classes
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
  }

  artifacts { // This comes with task "sourcesJar"
    archives sourcesJar
  }

  publishing {
    publications {
      "$project.name"(MavenPublication) {
        groupId project.group
        artifactId project.name
        version project.version
        from components.java
        artifact tasks.sourcesJar
      }
    }
  }

  dependencies {
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    implementation group: 'org.springframework', name: 'spring-core', version: "${springFrameworkVersion}"
    implementation group: 'org.springframework', name: 'spring-context', version: "${springFrameworkVersion}"
    implementation group: 'org.springframework', name: 'spring-webmvc', version: "${springFrameworkVersion}"
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: "${springBootVersion}"

    implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: "${jakartaPersistenceApiVersion}"
    implementation group: 'org.postgresql', name: 'postgresql', version: "${postgresVersion}"

    // Using Lib from other project
    api group: 'net.marci.core', name: 'marci-modules-common', version: "${marciCoreVersion}"
    api group: 'net.marci.core', name: 'marci-lib-common', version: "${marciCoreVersion}"

    // Using Lib from this project
    // api project(':marci-modules-<module_name>')
  }

  configurations {
    compileOnly {
      extendsFrom annotationProcessor
    }
  }

  tasks.register("create-dirs") {
    sourceSets*.java.srcDirs*.each { it.mkdirs() }
    sourceSets*.resources.srcDirs*.each { it.mkdirs() }
  }

  test {
    testlogger {
      theme 'standard'
      showExceptions true
      showStackTraces true
      showFullStackTraces false
      showCauses true
      slowThreshold 2000
      showSummary true
      showSimpleNames false
      showPassed true
      showSkipped true
      showFailed true
      showStandardStreams false
      showPassedStandardStreams true
      showSkippedStandardStreams true
      showFailedStandardStreams true
      logLevel 'lifecycle'
    }

    forkEvery = 1
    ignoreFailures = true

    useJUnitPlatform {
      // excludeTags "tofix"
      filter {
        includeTestsMatching "*UnitTest"
      }
    }
  }

  tasks.named('test') {
    useJUnitPlatform()
  }
}